{"version":3,"sources":["./src/app/components/contact-form/contact-form.component.ts","./src/app/components/contact-form/contact-form.component.html","./src/environments/environment.ts","./src/app/components/contact-list/contacts.component.ts","./src/app/components/contact-list/contacts.component.html","./src/app/data.json.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/contacts.service.ts","./src/app/services/http-mock-request-interceptor.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {ContactService} from \"../../services/contacts.service\";\nimport {NgForm} from \"@angular/forms\";\nimport {Contact} from \"../contact-list/contact\";\n\n@Component({\n    selector: 'app-contact-form',\n    templateUrl: './contact-form.component.html',\n    styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent implements OnInit {\n    currentContact:any;\n    @ViewChild('contactForm', { static: true }) contactForm: ElementRef;\n    @Input() model;\n    @Input() isEdit:boolean = false;\n    @Output() cancel = new EventEmitter();\n    // model = <Contact> {};\n    submitted = false;\n    btnName = 'Submit';\n\n    constructor(private contactService: ContactService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    createNew() {\n        return  {} as Contact;\n    }\n\n    onSubmit(contactForm: NgForm) {\n\n        if(contactForm.valid){\n            this.submitted = true;\n            if(!this.isEdit){\n                this.contactService.postContact(contactForm.value)\n                .subscribe(contact => {\n                    console.log('object saved', contact);\n                    // this.model = this.createNew();\n                    this.submitted = false;\n                    contactForm.resetForm();\n                });\n            }else {\n                this.contactService.putContact(contactForm.value)\n                .subscribe(contact => {\n                    console.log('object saved', contact);\n                    // this.model = this.createNew();\n                    this.submitted = false;\n                    contactForm.resetForm();\n\n                });\n            }\n\n            this.cancelEdit();\n            \n\n        console.log('submitted');\n        }else{\n            Object.keys( contactForm.controls).forEach(key => {\n                contactForm.controls[key].markAsDirty();\n               });\n               return;\n        }\n\n       \n    }\n\n    get diagnostic() {\n        return JSON.stringify(this.model);\n    }\n\n    cancelEdit(){\n        this.cancel.emit();\n    }\n\n}\n","<div class=\"container\">\n  <div [hidden]=\"submitted\"></div>\n  <h1>{{isEdit ? 'Edit': 'Add'}} Contact</h1>\n  <form (ngSubmit)=\"onSubmit(contactForm)\" #contactForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\"\n             required\n             [(ngModel)]=\"model.firstName\" name=\"firstName\"\n             [disabled]=\"submitted\"\n             #firstName=\"ngModel\">\n      <div [hidden]=\"firstName.valid || firstName.pristine\"\n           class=\"alert alert-danger\">\n        First Name is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\"\n             required\n             [(ngModel)]=\"model.lastName\" name=\"lastName\"\n             [disabled]=\"submitted\"\n             #lastName=\"ngModel\">\n      <div [hidden]=\"lastName.valid || lastName.pristine\"\n           class=\"alert alert-danger\">LastName is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\"\n             required\n             [(ngModel)]=\"model.email\" name=\"email\"\n             [disabled]=\"submitted\"\n             #email=\"ngModel\"\n             pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" >\n      <div [hidden]=\"email.valid || email.pristine\"\n           class=\"alert alert-danger\">Email is {{email.errors?.required ? 'required': 'Invalid'}}\n      </div>\n    </div>\n    <button class=\"btn btn-success\" (click)=\"cancelEdit()\">Cancel</button>\n    <button type=\"submit\" class=\"btn btn-success\" >{{btnName}}</button>\n    \n  </form>\n\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {ContactService} from \"../../services/contacts.service\";\nimport {Contact} from \"./contact\";\nimport {updatePlaceholderMap} from \"@angular/compiler/src/render3/view/i18n/util\";\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n  providers: [ContactService]\n})\nexport class ContactsComponent implements OnInit {\n  public contacts = [];\n  editOrAdd: boolean = false;\n  contact;\n  isEdit:boolean = false;\n  constructor(private contactService: ContactService) {\n  }\n\n  ngOnInit(): void {\n    this.readAll();\n  }\n\n  private readAll() {\n    return this.contactService.loadAll().subscribe((list) => {\n      this.contacts = list;\n    });\n  }\n\n  editContact(contact?:any){\n    this.editOrAdd = true;\n    if(!!contact){\n      this.isEdit = true\n    }else{\n      this.isEdit = false;\n    }\n    this.contact = contact || {};\n    // console.log(contact)\n  }\n\n  addOrEditData(val){\n\n  }\n\n  cancelEdit(){\n    this.editOrAdd = false\n  }\n}\n","<app-contact-form *ngIf=\"editOrAdd\" [isEdit]=\"isEdit\" [model]='contact' (addOrEdit)=\"addOrEditData($event)\" (cancel)=\"editOrAdd =!editOrAdd\"></app-contact-form>\n<!-- List -->\n<section *ngIf=\"!editOrAdd\">\n  <div *ngFor=\"let contact of this.contacts\">\n    <section *ngIf=\"!editOrAdd\">\n      {{contact.firstName}}, {{contact.lastName}}, {{contact.email}}\n      <button class=\"btn\"  (click)=\"editContact(contact)\">Edit</button>\n  \n    </section>\n    \n  </div>\n  <button class=\"btn btn-success\"  (click)=\"editContact()\">Add Contact</button>\n</section>\n\n","export const data = [\n    {\n        id: 1,\n        email: 'a@a.com',\n        firstName: 'Jon',\n        lastName: 'Smith'\n    },\n    {\n        id: 2,\n        email: 'm@m.com',\n        firstName: 'Marry',\n        lastName: 'White'\n    }\n]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-phonebook';\n}\n","<app-contacts></app-contacts>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './components/contact-list/contacts.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { ContactFormComponent } from './components/contact-form/contact-form.component';\nimport {HttpMockRequestInterceptor} from \"./services/http-mock-request-interceptor.service\";\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactsComponent,\n    ContactFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpMockRequestInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\nimport {throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {Injectable} from \"@angular/core\";\nimport {Contact} from \"../components/contact-list/contact\";\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n};\n\n@Injectable()\nexport class ContactService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    serverUrl = 'http://localhost:8080/api/contact';\n\n    private static handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            console.error('An error occurred:', error.error.message);\n        } else {\n            console.error(\n                `Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n\n    postContact(contact: Contact) {\n        return this.http.post<Contact>(this.serverUrl, contact, httpOptions)\n            .pipe(catchError(ContactService.handleError));\n    }\n\n    putContact(contact: Contact) {\n        return this.http.put<Contact>(this.serverUrl + '/' + contact.id, contact, httpOptions)\n            .pipe(catchError(ContactService.handleError));\n    }\n\n    loadAll() {\n        return this.http.get<Contact[]>(this.serverUrl, httpOptions)\n            .pipe(catchError(ContactService.handleError));\n    }\n\n    getById(id) {\n        return this.http.get<Contact>(this.serverUrl + '/' + id, httpOptions)\n            .pipe(catchError(ContactService.handleError));\n    }\n\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport * as storage from '../data.json';\n\nconst urls = [\n    {\n        url: \"http://localhost:8080/api/contact\",\n        method: 'GET',\n        getData: (request, id) => {\n            console.log(request, id);\n            return storage.data\n        }\n    }\n    , {\n        url: \"http://localhost:8080/api/contact\",\n        method: 'POST',\n        getData: (request, id) => {\n            request.body.id = storage.data.length + 1;\n            storage.data.push(request.body)\n            return request.body\n        }\n    }, {\n        url: \"http://localhost:8080/api/contact/#\",\n        method: 'GET',\n        getData: (request, id) => {\n            return storage.data.filter(item => item.id+\"\" === id)[0]\n        }\n    }, {\n        url: \"http://localhost:8080/api/contact/#\",\n        method: 'PUT',\n        getData: (request, id) => {\n            let foundItem = storage.data.filter(item => item.id+\"\" === id)[0];\n            Object.assign(foundItem, request.body);\n\n            return foundItem\n        }\n    }\n];\n\n@Injectable()\n// @ts-ignore\nexport class HttpMockRequestInterceptor implements HttpInterceptor {\n    constructor(private injector: Injector) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        for (const element of urls) {\n\n            if (request.method == element.method) {\n                if (request.url === element.url) {\n                    return of(new HttpResponse({status: 200, body: element.getData(request, null)}));\n                } else {\n\n                    let url = new URL(request.url);\n                    let id = url.pathname.replace(\"/api/contact/\", \"\")\n                    if (id && url.origin + \"/api/contact/#\" === element.url ) {\n                        return of(new HttpResponse({status: 200, body: element.getData(request, id)}));\n                    }\n                }\n            }\n\n            console.log(\"Unable to find the path\", request.url, request.method)\n        }\n\n        return next.handle(request);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}